(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{197:function(e,t,o){"use strict";o.r(t);var r=o(6),l=Object(r.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"devtools"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#devtools"}},[e._v("#")]),e._v(" DevTools")]),e._v(" "),o("p",[o("code",[e._v("Dobux")]),e._v(" 在 "),o("strong",[e._v("开发环境")]),e._v(" 默认集成了 "),o("a",{attrs:{href:"https://github.com/zalmoxisus/redux-devtools-extension",target:"_blank",rel:"noopener noreferrer"}},[e._v("redux-devtools-extension"),o("OutboundLink")],1),e._v("，可以借助浏览器插件实现 "),o("strong",[e._v("time travel")]),e._v(" 功能，其中每一个状态改变的 "),o("code",[e._v("action")]),e._v(" 名称由 "),o("code",[e._v("modelName/reducerName")]),e._v(" 标识")]),e._v(" "),o("p",[o("img",{attrs:{src:"/time-travel.gif",alt:""}})]),e._v(" "),o("h2",{attrs:{id:"多-model-travel"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#多-model-travel"}},[e._v("#")]),e._v(" 多 Model travel")]),e._v(" "),o("p",[o("code",[e._v("Dobux")]),e._v(" 支持使用多 Model 注入，对于这种情况每个 Model 都会和 redux-devtools 建立一个独立的连接生成一个 devtools 的实例，对应的实例名称为 "),o("code",[e._v("@dobux/modelName")]),e._v("，通过 devtools 的实例的切换面板可以根据诉求查看对应的 Model 的状态改变")]),e._v(" "),o("blockquote",[o("p",[e._v("注：为了减少过多的占用 Chrome 内存，当前 Model 对应的组件卸载的时候会断开与 devtools 的连接，切换到新的 Model 后可能需要手动重新开启（先关闭再开启）开发者调试工具")])]),e._v(" "),o("p",[o("img",{attrs:{src:"/multiple-model.gif",alt:""}})])])}),[],!1,null,null,null);t.default=l.exports}}]);